{
    "contents" : "\\name{matFct-class}\n\\Rdversion{1.1}\n\\docType{class}\n\\alias{matFct}\n\\alias{+,matFct,matFct-method}\n\\alias{-,matFct,matFct-method}\n\\alias{-,matFct,ANY-method}\n\\alias{*,matFct,matFct-method}\n\\alias{*,matrix,matFct-method}\n\\alias{*,matFct,matrix-method}\n\\alias{*,numeric,matFct-method}\n\\alias{*,matFct,numeric-method}\n\\alias{|,matFct,matFct-method}\n\\alias{\"[\",matFct,numeric,numeric-method}\n\\alias{transpose,matFct-method}\n\\alias{inverse,matFct,numeric,logical-method}\n\\alias{solve,matFct,matFct-method}\n\\alias{forward,matFct-method}\n\\alias{backward,matFct-method}\n\\alias{integral,matFct-method}\n\\alias{triangular,matFct-method}\n\\alias{evaluate,numeric,matFct-method}\n\\alias{superSample,numeric,matFct-method}\n\\alias{plot,matFct,missing-method}\n\\alias{plot,numeric,matFct-method}\n\n\\title{Class \\code{\"matFct\"}}\n\\description{\nPiecewise polynomial continuous matrix value function defined on an interval.\n}\n\\section{Objects from the Class}{\nObjects can be created by calls of the form \\code{new(\"matFct\", ...)}.\n%%  ~~ describe objects here ~~ \n}\n\\section{Slots}{\n  \\describe{\n    \\item{\\code{mesh}:}{Object of class \\code{\"mesh\"}}\n    \\item{\\code{f}:}{Object of class \\code{\"array\"}}\n    \\item{\\code{g}:}{Object of class \\code{\"array\"}}\n    \\item{\\code{continuous}:}{Object of class \\code{\"logical\"}}\n  }\n}\n\\section{Methods}{\n  \\describe{\n    \\item{+}{\\code{signature(e1 = \"matFct\", e2 = \"matFct\")}: Pointwise sum of two matrix valued functions.}\n    \\item{-}{\\code{signature(e1 = \"matFct\", e2 = \"matFct\")}: Pointwise difference of two matrix valued functions.}    \n    \\item{*}{\\code{signature(x = \"matFct\", y = \"matFct\")}: Pointwise matrix multiplication of two matrix valued functions.}\n    \\item{*}{\\code{signature(x = \"matrix\", y = \"matFct\")}: Pointwise matrix multiplication of a constant matrix and a matrix valued function.}\n    \\item{*}{\\code{signature(x = \"matFct\", y = \"matrix\")}: Pointwise matrix multiplication of a matrix valued function and a constant matrix.}\n    \\item{*}{\\code{signature(x = \"numeric\", y = \"matFct\")}: Pointwise multiplication of a constant scalar and a matrix valued function.}\n    \\item{*}{\\code{signature(x = \"matFct\", y = \"numeric\")}: Pointwise multiplication of a matrix valued function and a constant scalar.}\n    \\item{inverse}{\\code{signature(e1 = \"matFct\", order = \"numeric\", continuous = \"logical\")}: Pointwise inverse of a matrix valued function. The inverse is exact at the mesh points, but in general only approximate between mesh points. The \\code{order} argument controls the order of the polynomial interpolation between mesh points, and the \\code{continuous} argument controls whether the result is enforced to be continuous.}\n    \\item{inverse}{\\code{signature(a = \"matFct\", b = \"matFct\")}: Pointwise solution of linear equation. The solution is exact at the mesh points, but in general only approximate between mesh points.}\n    \\item{|}{\\code{signature(e1 = \"matFct\", e2 = \"matFct\")}: Pointwise concatenation of the columns of two matrix valued functions.}\n    \\item{\"[\"}{\\code{signature(e1 = \"matFct\", i = \"numeric\", j = \"numeric\")}: Subsetting of matrix value.}\n    \\item{transpose}{\\code{signature(e1 = \"matFct\")}: Pointwise transpose of a matrix valued function.}\n    \\item{forward}{\\code{signature(e1 = \"matFct\")}: Forward integral of a matrix valued function, i.e. the definite integral from the left end point of the domain to the argument.}\n    \\item{backward}{\\code{signature(e1 = \"matFct\")}: Backward integral of a matrix valued function, i.e. the definite integral from the argument to the right end point of the domain.}\n    \\item{integral}{\\code{signature(e1 = \"matFct\")}: Integral of a matrix valued function, i.e. the definite integral from the left to the right end point of the domain.}\n    \\item{triangular}{\\code{signature(e1 = \"matFct\")}: Returns vector of so-called triangular integrals. To be elaborated later.}    \n    \\item{evaluate}{\\code{signature(x = \"numeric\", e1 = \"matFct\")}: Evaluation of \\code{matFct} at the values \\code{x}. Returns an \\code{(N,M,p)-array}, where (N,M) is the dimension of the value space and p is the length of \\code{x}.}\n    \\item{superSample}{\\code{signature(x = \"numeric\", e1 = \"matFct\")}: Resamples \\code{matFct} such that the new mesh equals the union of \\code{x} and the old mesh. If the new mesh extends the function domain, then the function is extended to be constant in the extended domain.}\n    \\item{plot}{\\code{signature(x = \"matFct\")}: Plot a matrix valued function on its domain.}\n    \\item{plot}{\\code{signature(x = \"numeric\", y = \"matFct\")}: Plot a matrix valued function at the points specified in \\code{x}.}\n\t }\n}\n\\note{\nIf the matrix dimensions of the arguments do not match the mathematical operation, e.g. the second and the first dimensions of the factors in a matrix product are not equal, then the operation is restricted to the left most columns or upper most rows, respectively, and an associated warning is issued.\n\nFormally the '\\code{|}' method belongs to the S4 group \\code{Logic}. In our context this implies that the concatenation is done after matrix multiplication and sum, unless specified otherwise using parentheses.\n}\n%%\\references{\n%%  ~~put references to the literature/web site here~~\n%%}\n\\author{\nBo Markussen <bomar@math.ku.dk>\n}\n\\seealso{\n\\code{\\link{mesh}}\n%%\\code{\\linkS4class{mesh-class}}\n}\n\\examples{\nshowClass(\"matFct\")\n}\n\\keyword{classes}\n",
    "created" : 1408970044583.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1466990650",
    "id" : "86E1D1BA",
    "lastKnownWriteTime" : 1408970174,
    "path" : "C:/Users/pdq668/Dropbox/Full-rank functional regression/operatorCalc/man/matFct-class.Rd",
    "project_path" : "man/matFct-class.Rd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_doc"
}